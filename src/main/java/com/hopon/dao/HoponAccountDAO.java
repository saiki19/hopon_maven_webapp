package com.hopon.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.hopon.dto.HoponAccountDTO;
import com.hopon.utils.ApplicationUtil;
import com.hopon.utils.QueryExecuter;
import com.mysql.jdbc.Statement;

public class HoponAccountDAO {
	/*public HoponAccountDTO add(Connection con, HoponAccountDTO dto) throws SQLException {
		StringBuilder query = new StringBuilder();
		query.append("INSERT INTO hoponaccounts(idHoponAccounts, updatedDat");
		PreparedStatement pstmt = con.prepareStatement(query.toString() ,Statement.RETURN_GENERATED_KEYS);
		
		pstmt.executeUpdate();
		ResultSet tableKeys = pstmt.getGeneratedKeys();
		tableKeys.next();
		int autoGeneratedID = tableKeys.getInt(1);
		tableKeys.close();
		pstmt.close();
		dto.setIdHoponAccounts(autoGeneratedID);
		return dto;
	}*/
	public List<HoponAccountDTO> fetchAll(Connection con) throws SQLException {
		List<HoponAccountDTO> dtos = new ArrayList<HoponAccountDTO>();
		StringBuilder query = new StringBuilder();
		query.append("SELECT idHoponAccounts, Name, Balance, Description, UpdatedDT, UpdatedBy, CreatedBy, CreatedDT from hoponaccounts WHERE 1");
		PreparedStatement pstmt = con.prepareStatement(query.toString());
		ResultSet rs = QueryExecuter.getResultSet(pstmt, query.toString());
		while(rs.next()) {
			HoponAccountDTO dto = new HoponAccountDTO();
			dto.setIdHoponAccounts(rs.getInt(1));
			dto.setName(rs.getString(2));
			dto.setBalance(rs.getFloat(3));
			dto.setDescription(rs.getString(4));
			dto.setUpdateDate(rs.getString(5));
			dto.setUpdatedBy(rs.getInt(6));
			dto.setCreatedBy(rs.getInt(7));
			dto.setCreatedDate(rs.getString(8));
			dtos.add(dto);
		}
		rs.close();
		pstmt.close();
		return dtos;
	}
	public HoponAccountDTO fetchAllFromName(Connection con, String name) throws SQLException {
		HoponAccountDTO dto = new HoponAccountDTO();
		StringBuilder query = new StringBuilder();
		query.append("SELECT idHoponAccounts, Name, Balance, Description, UpdatedDT, UpdatedBy, CreatedBy, CreatedDT from hoponaccounts WHERE Name = ?");
		PreparedStatement pstmt = con.prepareStatement(query.toString());
		pstmt.setString(1, name);
		ResultSet rs = QueryExecuter.getResultSet(pstmt, query.toString());
		while(rs.next()) {
			dto.setIdHoponAccounts(rs.getInt(1));
			dto.setName(rs.getString(2));
			dto.setBalance(rs.getFloat(3));
			dto.setDescription(rs.getString(4));
			dto.setUpdateDate(rs.getString(5));
			dto.setUpdatedBy(rs.getInt(6));
			dto.setCreatedBy(rs.getInt(7));
			dto.setCreatedDate(rs.getString(8));
		}
		rs.close();
		pstmt.close();
		return dto;
	}
	public HoponAccountDTO fetchAllFromId(Connection con, int id) throws SQLException {
		HoponAccountDTO dto = new HoponAccountDTO();
		StringBuilder query = new StringBuilder();
		query.append("SELECT idHoponAccounts, Name, Balance, Description, UpdatedDT, UpdatedBy, CreatedBy, CreatedDT from hoponaccounts WHERE idHoponAccounts = ?");
		PreparedStatement pstmt = con.prepareStatement(query.toString());
		pstmt.setInt(1, id);
		ResultSet rs = QueryExecuter.getResultSet(pstmt, query.toString());
		while(rs.next()) {
			dto.setIdHoponAccounts(rs.getInt(1));
			dto.setName(rs.getString(2));
			dto.setBalance(rs.getFloat(3));
			dto.setDescription(rs.getString(4));
			dto.setUpdateDate(rs.getString(5));
			dto.setUpdatedBy(rs.getInt(6));
			dto.setCreatedBy(rs.getInt(7));
			dto.setCreatedDate(rs.getString(8));
		}
		rs.close();
		pstmt.close();
		return dto;
	}
}
