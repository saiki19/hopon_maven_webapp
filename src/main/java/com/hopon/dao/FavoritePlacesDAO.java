package com.hopon.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.hopon.dto.FavoritePlacesDTO;
import com.hopon.utils.QueryExecuter;
import com.mysql.jdbc.Statement;

public class FavoritePlacesDAO {

	public FavoritePlacesDTO enterFavoritePlace(Connection con,FavoritePlacesDTO favoritePlacesDTO) throws SQLException {

		StringBuilder query = new StringBuilder();
		query.append("INSERT INTO address (id,tagtype, city, pin, address,boundtype,userid, latitude, longitude) VALUES (?,?,?,?,?,?,?,?,?) ");

		PreparedStatement pstmt = con.prepareStatement(query.toString() ,Statement.RETURN_GENERATED_KEYS);
		pstmt.setString(1, favoritePlacesDTO.getID());
		pstmt.setString(2, favoritePlacesDTO.getTagtype());
		pstmt.setString(3, favoritePlacesDTO.getCity());
		pstmt.setString(4, favoritePlacesDTO.getPin());
		pstmt.setString(5, favoritePlacesDTO.getAddress());
		pstmt.setString(6, favoritePlacesDTO.getBoundtype());
		pstmt.setString(7, favoritePlacesDTO.getUserID());
		pstmt.setFloat(8, favoritePlacesDTO.getLatitude());
		pstmt.setFloat(9, favoritePlacesDTO.getLongitude());

		pstmt.executeUpdate();
		ResultSet tableKeys = pstmt.getGeneratedKeys();
		tableKeys.next();
		int autoGeneratedID = tableKeys.getInt(1);
		tableKeys.close();
		pstmt.close();
		favoritePlacesDTO.setID(String.valueOf(autoGeneratedID));
		return favoritePlacesDTO;
	}

	public List<FavoritePlacesDTO> findAllPlace(Connection con , String userName )throws SQLException{

		StringBuilder query = new StringBuilder();
		query.append(" SELECT  id,tagtype, city, pin, address,boundtype,userid, latitude, longitude from address where userid = '" + userName + "' ");

		List<FavoritePlacesDTO> favoritePlacesList = new ArrayList<FavoritePlacesDTO>();
		PreparedStatement pstmt = con.prepareStatement(query.toString());
		ResultSet rs = QueryExecuter.getResultSet(pstmt, query.toString());
		while(rs.next()) {
			FavoritePlacesDTO dto = new FavoritePlacesDTO();
			dto.setID(rs.getString(1));
			dto.setTagtype(rs.getString(2));
			dto.setCity(rs.getString(3));
			dto.setPin(rs.getString(4));
			dto.setAddress(rs.getString(5));
			dto.setBoundtype(rs.getString(6));
			dto.setUserID(rs.getString(7));
			dto.setLatitude(rs.getFloat(8));
			dto.setLongitude(rs.getFloat(9));
			favoritePlacesList.add(dto);

		}
		rs.close();
		pstmt.close();
		return favoritePlacesList;
	}


}

