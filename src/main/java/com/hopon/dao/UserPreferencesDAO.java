package com.hopon.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;

import com.hopon.dto.UserPreferencesDTO;
import com.hopon.utils.ApplicationUtil;
import com.hopon.utils.QueryExecuter;
import com.mysql.jdbc.Statement;

public class UserPreferencesDAO {
	public UserPreferencesDTO insert(Connection con, UserPreferencesDTO dto) throws SQLException {
		StringBuilder query = new StringBuilder();
		query.append("INSERT INTO user_preferences (preference_id, user_id, gender, max_waittime, facebook_id, twitter_id, linkedin_id, googleplus_id, created_dt, updated_dt) VALUES (?,?,?,?,?,?,?,?,?,?) ");

		PreparedStatement pstmt = con.prepareStatement(query.toString() ,Statement.RETURN_GENERATED_KEYS);
		pstmt.setInt(1, dto.getPreferenceId());
		pstmt.setInt(2, dto.getUserId());
		//male/female/no-preferences
		if(dto.getGender() == null || ((!dto.getGender().equals("male")) && (!dto.getGender().equals("female")))) {
			dto.setGender("no-preferences");
		}
		
		pstmt.setString(3, dto.getGender());
		pstmt.setInt(4, dto.getMaxWaitTime());
		pstmt.setString(5, dto.getFacebookId());
		pstmt.setString(6, dto.getTwitterId());
		pstmt.setString(7, dto.getLinkedinId());
		pstmt.setString(8, dto.getGoogleplusId());
		SimpleDateFormat formatter = new SimpleDateFormat(ApplicationUtil.datePattern3);
		String currentDate = formatter.format(new Date());
		if(dto.getCurrentDate() == null) {
			pstmt.setString(9, currentDate);
		} else {
			pstmt.setString(9, dto.getCurrentDate());
		}
		if(dto.getUpdatedDate() == null) {
			pstmt.setString(10, currentDate);
		} else {
			pstmt.setString(10, dto.getUpdatedDate());
		}
		pstmt.executeUpdate();
		ResultSet tableKeys = pstmt.getGeneratedKeys();
		tableKeys.next();
		int autoGeneratedID = tableKeys.getInt(1);
		tableKeys.close();
		pstmt.close();
		dto.setPreferenceId(autoGeneratedID);
		return dto;
	}

	public UserPreferencesDTO update(Connection con, UserPreferencesDTO dto) throws SQLException {
		StringBuilder query = new StringBuilder();
		query.append("UPDATE user_preferences SET gender = ?, max_waittime = ?, facebook_id = ?, twitter_id = ?, linkedin_id = ?, googleplus_id = ?, updated_dt = ? WHERE user_id = ? ");

		PreparedStatement pstmt = con.prepareStatement(query.toString());
		pstmt.setInt(8, dto.getUserId());
		//male/female/no-preferences
		if(dto.getGender() == null || ((!dto.getGender().equals("male")) && (!dto.getGender().equals("female")))) {
			dto.setGender("no-preferences");
		}
		pstmt.setString(1, dto.getGender());
		pstmt.setInt(2, dto.getMaxWaitTime());
		pstmt.setString(3, dto.getFacebookId());
		pstmt.setString(4, dto.getTwitterId());
		pstmt.setString(5, dto.getLinkedinId());
		pstmt.setString(6, dto.getGoogleplusId());

		SimpleDateFormat formatter = new SimpleDateFormat(ApplicationUtil.datePattern3);
		String currentDate = formatter.format(new Date());
		pstmt.setString(7, currentDate);

		pstmt.executeUpdate();
		pstmt.close();
		return dto;
	}

	public UserPreferencesDTO fetchUserPreference(Connection con, int userId)  throws SQLException {
		StringBuilder query = new StringBuilder();
		query.append("SELECT preference_id, gender, max_waittime, facebook_id, twitter_id, linkedin_id, googleplus_id, created_dt, updated_dt from user_preferences where user_id = " + userId);
		PreparedStatement pstmt = con.prepareStatement(query.toString());
		UserPreferencesDTO dto = new UserPreferencesDTO();
		ResultSet rs = QueryExecuter.getResultSet(pstmt, query.toString());
		if (rs.next()){
			dto.setPreferenceId(rs.getInt(1));
			dto.setUserId(userId);
			dto.setGender(rs.getString(2));
			dto.setMaxWaitTime(rs.getInt(3));
			dto.setFacebookId(rs.getString(4));
			dto.setTwitterId(rs.getString(5));
			dto.setLinkedinId(rs.getString(6));
			dto.setGoogleplusId(rs.getString(7));
			dto.setCurrentDate(rs.getString(8));
			dto.setUpdatedDate(rs.getString(9));
		}
		rs.close();
		pstmt.close();
		return dto;		
	}
}
