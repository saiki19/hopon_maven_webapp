package com.hopon.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.hopon.dto.CompanyRegisterDTO;
import com.hopon.utils.QueryExecuter;
import com.mysql.jdbc.Statement;

public class CompanyRegisterDAO {
	public CompanyRegisterDTO registerCompany(Connection con,CompanyRegisterDTO companyRegisterDTO) throws SQLException {

		StringBuilder query = new StringBuilder();
		query.append("INSERT INTO company (P_Company_Id,Name, Destination_ID, Role_taxi_company, Rate,Areas, Rating,Registered_date, Circle_id, Address, Sector,Branches,EmployeeNumber,userID, pin_code, city, state, phone_number, fromNight, toNight) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) ");

		PreparedStatement pstmt = con.prepareStatement(query.toString(),Statement.RETURN_GENERATED_KEYS);
		pstmt.setString(1, companyRegisterDTO.getCompanyID());
		pstmt.setString(2, companyRegisterDTO.getCompanyName());
		pstmt.setString(3, companyRegisterDTO.getDestination_ID());
		pstmt.setString(4, companyRegisterDTO.getRole_taxi_company());
		pstmt.setString(5, companyRegisterDTO.getCompanyRates());
		pstmt.setString(6, companyRegisterDTO.getCompanyAreas());
		pstmt.setString(7, companyRegisterDTO.getCompanyRates());
		pstmt.setString(8, companyRegisterDTO.getRegistered_date() );
		pstmt.setString(9, "0");//implement circleId
		pstmt.setString(10, companyRegisterDTO.getCompanyAddress());
		pstmt.setString(11, companyRegisterDTO.getCompanySector());
		pstmt.setString(12, companyRegisterDTO.getCompanyBranches());
		pstmt.setString(13, companyRegisterDTO.getCompanyEmployee());
		pstmt.setString(14, companyRegisterDTO.getUserID());
		pstmt.setString(15, companyRegisterDTO.getPinCode());
		pstmt.setString(16, companyRegisterDTO.getCity());
		pstmt.setString(17, companyRegisterDTO.getState());
		pstmt.setString(18, companyRegisterDTO.getPhoneNumber());
		pstmt.setString(19, companyRegisterDTO.getFromNight());
		pstmt.setString(20, companyRegisterDTO.getToNight());

		pstmt.executeUpdate();
		ResultSet tableKeys = pstmt.getGeneratedKeys();
		tableKeys.next();
		int autoGeneratedID = tableKeys.getInt(1);
		tableKeys.close();
		pstmt.close();
		companyRegisterDTO.setCompanyID(String.valueOf(autoGeneratedID));

		return companyRegisterDTO;
	}

	public List<CompanyRegisterDTO> allRegisterCompanyList(Connection con)throws SQLException {
		List<CompanyRegisterDTO> companyList = new ArrayList<CompanyRegisterDTO>();
		StringBuilder query = new StringBuilder();
		query.append(" SELECT  P_Company_Id,  Name FROM company");
		PreparedStatement pstmt = con.prepareStatement(query.toString());
		ResultSet rs = QueryExecuter.getResultSet(pstmt, query.toString());
		while(rs.next()) {
			CompanyRegisterDTO  dto = new CompanyRegisterDTO();
			dto.setCompanyID(rs.getString(1));
			dto.setCompanyName(rs.getString(2));
			companyList.add(dto);
		}
		rs.close();
		pstmt.close();
		return companyList;
	}
	public List<CompanyRegisterDTO> allRegisterCompanyListByLoginUser(Connection con ,String userID)throws SQLException {
		List<CompanyRegisterDTO> companyList = new ArrayList<CompanyRegisterDTO>();
		StringBuilder query = new StringBuilder();
		query.append(" SELECT  P_Company_Id,  Name, Destination_ID,Rate,Areas,Address,Sector,Branches,Role_taxi_company, EmployeeNumber,pin_code, city, state, phone_number, fromNight, toNight FROM company where userID= '"+userID+"'");

		PreparedStatement pstmt = con.prepareStatement(query.toString());
		ResultSet rs = QueryExecuter.getResultSet(pstmt, query.toString());
		while(rs.next()) {
			CompanyRegisterDTO  dto = new CompanyRegisterDTO();
			dto.setCompanyID(rs.getString(1));
			dto.setCompanyName(rs.getString(2));
			dto.setDestination_ID(rs.getString(3));
			dto.setCompanyRates(rs.getString(4));
			dto.setCompanyAreas(rs.getString(5));
			dto.setCompanyAddress(rs.getString(6));
			dto.setCompanySector(rs.getString(7));
			dto.setCompanyBranches(rs.getString(8));
			dto.setRole_taxi_company(rs.getString(9));
			dto.setCompanyEmployee(rs.getString(10));
			dto.setPinCode(rs.getString(11));
			dto.setCity(rs.getString(12));
			dto.setState(rs.getString(13));
			dto.setPhoneNumber(rs.getString(14));
			dto.setFromNight(rs.getString(15));
			dto.setToNight(rs.getString(16));
			companyList.add(dto);
		}
		rs.close();
		pstmt.close();
		return companyList;
	}
	public CompanyRegisterDTO updateComapny(Connection con,CompanyRegisterDTO companyRegisterDTO)throws SQLException {
		StringBuilder query = new StringBuilder();
		query.append("UPDATE company SET  Name = '" + companyRegisterDTO.getCompanyName() + "' , Address = '" + companyRegisterDTO.getCompanyAddress() + "' ,Areas = '" + companyRegisterDTO.getCompanyAreas() + "'  where P_Company_Id ='" + companyRegisterDTO.getCompanyID() + "'");
		PreparedStatement	pstmt = con.prepareStatement(query.toString());
		pstmt.executeUpdate();
		pstmt.close();
		return companyRegisterDTO;
	}

	public CompanyRegisterDTO updateCompanyByUserId(Connection con,CompanyRegisterDTO companyRegisterDTO)throws SQLException {
		StringBuilder query = new StringBuilder();
		query.append("UPDATE company SET  Name = ? , Address = ? ,Areas = ?, " +
		"Role_taxi_company = ?, Rate = ?, Rating = ?,Registered_date = ?, Sector = ?,Branches = ?,EmployeeNumber = ?, pin_code = ?, city = ?, state = ?, phone_number = ?, fromNight = ?, toNight = ? where userID = ?");

		PreparedStatement	pstmt = con.prepareStatement(query.toString());
		pstmt.setString(1, companyRegisterDTO.getCompanyName());
		pstmt.setString(2, companyRegisterDTO.getCompanyAddress());
		pstmt.setString(3, companyRegisterDTO.getCompanyAreas());

		pstmt.setString(4, companyRegisterDTO.getRole_taxi_company());
		pstmt.setString(5, companyRegisterDTO.getCompanyRates());
		pstmt.setString(6, companyRegisterDTO.getCompanyRates());
		pstmt.setString(7, companyRegisterDTO.getRegistered_date());

		pstmt.setString(8, companyRegisterDTO.getCompanySector());
		pstmt.setString(9, companyRegisterDTO.getCompanyBranches());
		pstmt.setString(10, companyRegisterDTO.getCompanyEmployee());
		pstmt.setString(11, companyRegisterDTO.getPinCode());
		pstmt.setString(12, companyRegisterDTO.getCity());
		pstmt.setString(13, companyRegisterDTO.getState());
		pstmt.setString(14, companyRegisterDTO.getPhoneNumber());
		pstmt.setString(15, companyRegisterDTO.getFromNight());
		pstmt.setString(16, companyRegisterDTO.getToNight());
		pstmt.setString(17, companyRegisterDTO.getUserID());
		pstmt.executeUpdate();
		pstmt.close();
		return companyRegisterDTO;
	}
}
